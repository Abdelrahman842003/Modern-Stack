name: CI Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  laravel-tests:
    name: Laravel Tests (PHP 8.3)
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_DB: task_management_test
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7.2-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.3'
          extensions: mbstring, pdo, pdo_pgsql, redis, zip
          coverage: xdebug
          tools: composer:2.7

      - name: Copy .env
        working-directory: ./laravel
        run: |
          cp .env.example .env
          sed -i 's/DB_HOST=postgres/DB_HOST=127.0.0.1/' .env
          sed -i 's/REDIS_HOST=redis/REDIS_HOST=127.0.0.1/' .env

      - name: Cache Composer dependencies
        uses: actions/cache@v3
        with:
          path: laravel/vendor
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install dependencies
        working-directory: ./laravel
        run: composer install --prefer-dist --no-interaction --no-progress

      - name: Generate app key
        working-directory: ./laravel
        run: php artisan key:generate

      - name: Run database migrations
        working-directory: ./laravel
        run: php artisan migrate --force

      - name: Run Laravel Pint (Code Style)
        working-directory: ./laravel
        run: ./vendor/bin/pint --test

      - name: Run PHPStan (Static Analysis)
        working-directory: ./laravel
        run: ./vendor/bin/phpstan analyse --memory-limit=2G

      - name: Run tests
        working-directory: ./laravel
        run: php artisan test

  node-tests:
    name: Node.js Tests (Node 20)
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: node-notify/package-lock.json

      - name: Copy .env
        working-directory: ./node-notify
        run: cp .env.example .env

      - name: Install dependencies
        working-directory: ./node-notify
        run: npm ci

      - name: Run ESLint (Code Style)
        working-directory: ./node-notify
        run: npm run lint

      - name: Run tests
        working-directory: ./node-notify
        run: npm test

  docker-build:
    name: Docker Build Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Laravel image
        uses: docker/build-push-action@v5
        with:
          context: ./laravel
          file: ./docker/laravel.Dockerfile
          push: false
          tags: task-api-laravel:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Build Node.js image
        uses: docker/build-push-action@v5
        with:
          context: ./node-notify
          file: ./docker/node.Dockerfile
          push: false
          tags: task-api-node:test
          cache-from: type=gha
          cache-to: type=gha,mode=max
